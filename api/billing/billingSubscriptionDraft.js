// NOTE: The following code was started with the intent of making a subscription-based billing plan in which the customer would be charged a monthly
// amount based on how long and how  many users were in a user-hosted active call for the past month. It was decided to instead have the customer
// first add money to their account and then deduct usage costs from their accountBalance. 


// // require('dotenv').config(); NOT WORKING. HAVE TO USE THE BELOW. I think this is because we're not hitting an enpoint on the heroku backend. Nothing in this file should affect that.
// require('dotenv').config({path: '../../.env'});
// const router = require('express').Router();
// const stripe = require("stripe")(process.env.SK_TEST);
// console.log(process.env.SK_TEST);
// router.use(require("body-parser").text());



// // Create a product
// // There are two kinds of products: goods and services. Goods are intended for use with the Orders API while services are for subscriptions. When creating a product, use the type parameter to specify the correct one. 
// const voiceChatProduct = stripe.products.create({
//     name: 'Intercom App',
//     type: 'service'
//   })
//   .then(product => {
//     console.log(product)
//     const productId = product.id; //When creating a product through the API, the response includes an ID, which you can use to attach plans to the product.
//   })
//   .catch(err => {
//     console.log(err)
//   });


// // Create a plan function 
// // Required parameters to make a Plan:
// //      -product, either the ID of an existing product to associate with the plan or the properties to define a new product.
// //      -amount, what the customer is charged per subscription per interval.
// //      -interval, the billing period for the plan, which can range from a single day to a year. The interval options are day, week, month, and year. You can also use interval_count to set more customized intervals, such as billing a customer every 30 days or every 5 months.
// //      -id, a unique identifier. This is auto-generated by Stripe. You can optionally override this value, but plan ID must be unique across all plans in your Stripe account. You can, however, use the same plan ID in both live and test modes.
// function createPlan(product,amount,interval) {}


// // // For deleting a product
// // stripe.products.del(`${productId}`)
// // .then(res => {
// //     console.log(res)
// // })
// // .catch(err => {
// //     console.log(err)
// // });